[{"filePath":"C:\\Users\\Administrator\\Downloads\\optimo-workforce\\optimo-workforce\\src\\components\\ContactPage.tsx","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: The keyword 'import' is reserved","line":1,"column":1,"nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { \r\n  Mail, \r\n  Phone, \r\n  MapPin, \r\n  MessageCircle, \r\n  Calendar, \r\n  Clock, \r\n  Globe, \r\n  Send,\r\n  CheckCircle,\r\n  Users,\r\n  Building2,\r\n  Coffee,\r\n  Utensils,\r\n  ArrowRight,\r\n  Linkedin,\r\n  Twitter,\r\n  Youtube,\r\n  Headphones,\r\n  Video,\r\n  FileText\r\n} from 'lucide-react';\r\nimport { ContactTranslations } from '../types/i18n/contact-translations';\r\n\r\ninterface ContactPageProps {\r\n  translations?: ContactTranslations;\r\n}\r\n\r\nconst ContactPage: React.FC<ContactPageProps> = ({ translations }) => {\r\n  const { t } = useTranslation('components/contact');\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    company: '',\r\n    businessType: '',\r\n    locations: '',\r\n    phone: '',\r\n    region: '',\r\n    message: '',\r\n    contactReason: ''\r\n  });\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  // Helper function to safely access translations\r\n  const getTranslation = (path: string): string => {\r\n    if (translations) {\r\n      const keys = path.split('.');\r\n      let current: any = translations;\r\n      for (const key of keys) {\r\n        if (current && typeof current === 'object' && key in current) {\r\n          current = current[key];\r\n        } else {\r\n          return t(path);\r\n        }\r\n      }\r\n      return typeof current === 'string' ? current : t(path);\r\n    }\r\n    return t(path);\r\n  };\r\n\r\n  const businessTypes = [\r\n    { value: 'restaurant', label: getTranslation('contactForm.options.businessTypes.restaurant'), icon: Utensils },\r\n    { value: 'hotel', label: getTranslation('contactForm.options.businessTypes.hotel'), icon: Building2 },\r\n    { value: 'cafe', label: getTranslation('contactForm.options.businessTypes.cafe'), icon: Coffee },\r\n    { value: 'other', label: getTranslation('contactForm.options.businessTypes.other'), icon: Users }\r\n  ];\r\n\r\n  const contactReasons = [\r\n    getTranslation('contactForm.options.contactReasons.requestDemo'),\r\n    getTranslation('contactForm.options.contactReasons.getPricing'),\r\n    getTranslation('contactForm.options.contactReasons.technicalSupport'),\r\n    getTranslation('contactForm.options.contactReasons.partnership'),\r\n    getTranslation('contactForm.options.contactReasons.media'),\r\n    getTranslation('contactForm.options.contactReasons.general')\r\n  ];\r\n\r\n  const regions = [\r\n    getTranslation('contactForm.options.regions.unitedStates'),\r\n    getTranslation('contactForm.options.regions.eu'),\r\n    getTranslation('contactForm.options.regions.latam'),\r\n    getTranslation('contactForm.options.regions.apac'),\r\n    getTranslation('contactForm.options.regions.other')\r\n  ];\r\n\r\n  const offices = [\r\n    {\r\n      city: getTranslation('globalOffices.offices.barcelona.city'),\r\n      country: getTranslation('globalOffices.offices.barcelona.country'),\r\n      address: getTranslation('globalOffices.offices.barcelona.address'),\r\n      phone: getTranslation('globalOffices.offices.barcelona.phone'),\r\n      email: getTranslation('globalOffices.offices.barcelona.email'),\r\n      timezone: getTranslation('globalOffices.offices.barcelona.timezone'),\r\n      hours: getTranslation('globalOffices.offices.barcelona.hours'),\r\n      flag: 'ðŸ‡ªðŸ‡¸'\r\n    },\r\n    {\r\n      city: getTranslation('globalOffices.offices.newYork.city'),\r\n      country: getTranslation('globalOffices.offices.newYork.country'),\r\n      address: getTranslation('globalOffices.offices.newYork.address'),\r\n      phone: getTranslation('globalOffices.offices.newYork.phone'),\r\n      email: getTranslation('globalOffices.offices.newYork.email'),\r\n      timezone: getTranslation('globalOffices.offices.newYork.timezone'),\r\n      hours: getTranslation('globalOffices.offices.newYork.hours'),\r\n      flag: 'ðŸ‡ºðŸ‡¸'\r\n    },\r\n    {\r\n      city: getTranslation('globalOffices.offices.singapore.city'),\r\n      country: getTranslation('globalOffices.offices.singapore.country'),\r\n      address: getTranslation('globalOffices.offices.singapore.address'),\r\n      phone: getTranslation('globalOffices.offices.singapore.phone'),\r\n      email: getTranslation('globalOffices.offices.singapore.email'),\r\n      timezone: getTranslation('globalOffices.offices.singapore.timezone'),\r\n      hours: getTranslation('globalOffices.offices.singapore.hours'),\r\n      flag: 'ðŸ‡¸ðŸ‡¬'\r\n    },\r\n    {\r\n      city: getTranslation('globalOffices.offices.saoPaulo.city'),\r\n      country: getTranslation('globalOffices.offices.saoPaulo.country'),\r\n      address: getTranslation('globalOffices.offices.saoPaulo.address'),\r\n      phone: getTranslation('globalOffices.offices.saoPaulo.phone'),\r\n      email: getTranslation('globalOffices.offices.saoPaulo.email'),\r\n      timezone: getTranslation('globalOffices.offices.saoPaulo.timezone'),\r\n      hours: getTranslation('globalOffices.offices.saoPaulo.hours'),\r\n      flag: 'ðŸ‡§ðŸ‡·'\r\n    }\r\n  ];\r\n\r\n  const supportOptions = [\r\n    {\r\n      title: getTranslation('supportOptions.cards.liveChat.title'),\r\n      description: getTranslation('supportOptions.cards.liveChat.description'),\r\n      icon: MessageCircle,\r\n      action: getTranslation('supportOptions.cards.liveChat.action'),\r\n      availability: getTranslation('supportOptions.cards.liveChat.availability'),\r\n      color: 'bg-primary'\r\n    },\r\n    {\r\n      title: getTranslation('supportOptions.cards.videoCall.title'),\r\n      description: getTranslation('supportOptions.cards.videoCall.description'),\r\n      icon: Video,\r\n      action: getTranslation('supportOptions.cards.videoCall.action'),\r\n      availability: getTranslation('supportOptions.cards.videoCall.availability'),\r\n      color: 'bg-secondary'\r\n    },\r\n    {\r\n      title: getTranslation('supportOptions.cards.phoneSupport.title'),\r\n      description: getTranslation('supportOptions.cards.phoneSupport.description'),\r\n      icon: Phone,\r\n      action: getTranslation('supportOptions.cards.phoneSupport.action'),\r\n      availability: getTranslation('supportOptions.cards.phoneSupport.availability'),\r\n      color: 'bg-accent-latam'\r\n    },\r\n    {\r\n      title: getTranslation('supportOptions.cards.helpCenter.title'),\r\n      description: getTranslation('supportOptions.cards.helpCenter.description'),\r\n      icon: FileText,\r\n      action: getTranslation('supportOptions.cards.helpCenter.action'),\r\n      availability: getTranslation('supportOptions.cards.helpCenter.availability'),\r\n      color: 'bg-accent-apac'\r\n    }\r\n  ];\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    // Handle form submission\r\n    console.log('Contact form submitted:', formData);\r\n    setIsSubmitted(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-white\">\r\n      {/* Hero Section */}\r\n      <section className=\"relative bg-gradient-to-br from-primary to-blue-600 text-white overflow-hidden\">\r\n        <div className=\"absolute inset-0 bg-black opacity-10\"></div>\r\n        <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20 lg:py-32\">\r\n          <div className=\"text-center\">\r\n            <div className=\"inline-flex items-center justify-center w-24 h-24 bg-white bg-opacity-20 rounded-full mb-8 animate-pulse-slow\">\r\n              <MessageCircle size={48} className=\"text-white\" />\r\n            </div>\r\n            <h1 className=\"text-4xl lg:text-6xl font-ibm-plex-sans font-bold leading-tight mb-6\">\r\n              {getTranslation('heroSection.title.mainHeading')}\r\n            </h1>\r\n            <p className=\"text-xl lg:text-2xl mb-8 text-blue-100 max-w-4xl mx-auto\">\r\n              {getTranslation('heroSection.subtitle.description')}\r\n            </p>\r\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\r\n              <button className=\"bg-secondary hover:bg-green-600 text-white px-8 py-4 rounded-lg font-semibold text-lg transition-all duration-300 transform hover:scale-105 flex items-center justify-center gap-3\">\r\n                <Calendar size={24} />\r\n                {getTranslation('heroSection.buttons.scheduleDemo')}\r\n              </button>\r\n              <button className=\"border-2 border-white text-white hover:bg-white hover:text-primary px-8 py-4 rounded-lg font-semibold text-lg transition-all duration-300 flex items-center justify-center gap-3\">\r\n                <MessageCircle size={24} />\r\n                {getTranslation('heroSection.buttons.startLiveChat')}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Quick Support Options */}\r\n      <section className=\"py-20 bg-gray-50\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"text-center mb-16\">\r\n            <h2 className=\"text-4xl lg:text-5xl font-ibm-plex-sans font-bold text-gray-900 mb-4\">\r\n              {getTranslation('supportOptions.title.mainHeading')}\r\n            </h2>\r\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\r\n              {getTranslation('supportOptions.subtitle.description')}\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"grid lg:grid-cols-4 gap-8\">\r\n            {supportOptions.map((option, index) => {\r\n              const Icon = option.icon;\r\n              return (\r\n                <div key={index} className=\"bg-white rounded-2xl p-8 shadow-lg hover:shadow-2xl transition-all duration-300 transform hover:scale-105\">\r\n                  <div className=\"text-center\">\r\n                    <div className={`inline-flex items-center justify-center w-20 h-20 rounded-full ${option.color} bg-opacity-10 mb-6`}>\r\n                      <Icon size={40} className={option.color.replace('bg-', 'text-')} />\r\n                    </div>\r\n                    <h3 className=\"text-xl font-bold text-gray-900 mb-4\">{option.title}</h3>\r\n                    <p className=\"text-gray-600 mb-6 leading-relaxed\">{option.description}</p>\r\n                    <div className=\"mb-6\">\r\n                      <div className=\"text-sm text-gray-500 mb-2\">{getTranslation('supportOptions.cards.liveChat.availability')}</div>\r\n                      <div className=\"text-sm font-semibold text-gray-700\">{option.availability}</div>\r\n                    </div>\r\n                    <button className={`w-full ${option.color} hover:opacity-90 text-white py-3 rounded-lg font-semibold transition-all duration-300`}>\r\n                      {option.action}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16\">\r\n        <div className=\"grid lg:grid-cols-2 gap-16\">\r\n          {/* Contact Form */}\r\n          <div className=\"bg-white rounded-2xl p-8 shadow-lg\">\r\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-8 flex items-center gap-3\">\r\n              <Send className=\"text-primary\" size={32} />\r\n              {getTranslation('contactForm.title.mainHeading')}\r\n            </h2>\r\n\r\n            {!isSubmitted ? (\r\n              <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n                <div className=\"grid md:grid-cols-2 gap-6\">\r\n                  <div>\r\n                    <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      {getTranslation('contactForm.labels.fullName')}\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"name\"\r\n                      name=\"name\"\r\n                      value={formData.name}\r\n                      onChange={handleInputChange}\r\n                      required\r\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\r\n                      placeholder={getTranslation('contactForm.placeholders.fullName')}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      {getTranslation('contactForm.labels.emailAddress')}\r\n                    </label>\r\n                    <input\r\n                      type=\"email\"\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      value={formData.email}\r\n                      onChange={handleInputChange}\r\n                      required\r\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\r\n                      placeholder={getTranslation('contactForm.placeholders.email')}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"grid md:grid-cols-2 gap-6\">\r\n                  <div>\r\n                    <label htmlFor=\"company\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      {getTranslation('contactForm.labels.companyName')}\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"company\"\r\n                      name=\"company\"\r\n                      value={formData.company}\r\n                      onChange={handleInputChange}\r\n                      required\r\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\r\n                      placeholder={getTranslation('contactForm.placeholders.company')}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <label htmlFor=\"phone\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      {getTranslation('contactForm.labels.phoneNumber')}\r\n                    </label>\r\n                    <input\r\n                      type=\"tel\"\r\n                      id=\"phone\"\r\n                      name=\"phone\"\r\n                      value={formData.phone}\r\n                      onChange={handleInputChange}\r\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\r\n                      placeholder={getTranslation('contactForm.placeholders.phone')}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-3\">\r\n                    {getTranslation('contactForm.labels.businessType')}\r\n                  </label>\r\n                  <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3\">\r\n                    {businessTypes.map((type) => {\r\n                      const Icon = type.icon;\r\n                      return (\r\n                        <button\r\n                          key={type.value}\r\n                          type=\"button\"\r\n                          onClick={() => setFormData({...formData, businessType: type.value})}\r\n                          className={`p-4 rounded-lg border-2 transition-all duration-300 ${\r\n                            formData.businessType === type.value\r\n                              ? 'border-primary bg-blue-50 text-primary'\r\n                              : 'border-gray-200 hover:border-gray-300'\r\n                          }`}\r\n                        >\r\n                          <Icon size={24} className=\"mx-auto mb-2\" />\r\n                          <div className=\"text-sm font-medium\">{type.label}</div>\r\n                        </button>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"grid md:grid-cols-2 gap-6\">\r\n                  <div>\r\n                    <label htmlFor=\"locations\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      {getTranslation('contactForm.labels.locations')}\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      id=\"locations\"\r\n                      name=\"locations\"\r\n                      value={formData.locations}\r\n                      onChange={handleInputChange}\r\n                      min=\"1\"\r\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\r\n                      placeholder={getTranslation('contactForm.placeholders.locations')}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <label htmlFor=\"region\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      {getTranslation('contactForm.labels.region')}\r\n                    </label>\r\n                    <select\r\n                      id=\"region\"\r\n                      name=\"region\"\r\n                      value={formData.region}\r\n                      onChange={handleInputChange}\r\n                      required\r\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\r\n                    >\r\n                      <option value=\"\">{getTranslation('contactForm.placeholders.selectRegion')}</option>\r\n                      {regions.map((region) => (\r\n                        <option key={region} value={region}>{region}</option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <label htmlFor=\"contactReason\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    {getTranslation('contactForm.labels.contactReason')}\r\n                  </label>\r\n                  <select\r\n                    id=\"contactReason\"\r\n                    name=\"contactReason\"\r\n                    value={formData.contactReason}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\r\n                  >\r\n                    <option value=\"\">{getTranslation('contactForm.placeholders.selectReason')}</option>\r\n                    {contactReasons.map((reason) => (\r\n                      <option key={reason} value={reason}>{reason}</option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n\r\n                <div>\r\n                  <label htmlFor=\"message\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    {getTranslation('contactForm.labels.message')}\r\n                  </label>\r\n                  <textarea\r\n                    id=\"message\"\r\n                    name=\"message\"\r\n                    value={formData.message}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    rows={6}\r\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent resize-none\"\r\n                    placeholder={getTranslation('contactForm.placeholders.message')}\r\n                  />\r\n                </div>\r\n\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"w-full bg-primary hover:bg-blue-600 text-white py-4 rounded-lg font-semibold text-lg transition-all duration-300 transform hover:scale-105 flex items-center justify-center gap-3\"\r\n                >\r\n                  <Send size={24} />\r\n                  {getTranslation('contactForm.buttons.sendMessage')}\r\n                </button>\r\n\r\n                <div className=\"text-center text-sm text-gray-600\">\r\n                  {getTranslation('contactForm.notes.responseTime')}\r\n                </div>\r\n              </form>\r\n            ) : (\r\n              <div className=\"text-center py-12\">\r\n                <div className=\"inline-flex items-center justify-center w-20 h-20 bg-secondary bg-opacity-10 rounded-full mb-6\">\r\n                  <CheckCircle size={40} className=\"text-secondary\" />\r\n                </div>\r\n                <h3 className=\"text-2xl font-bold text-gray-900 mb-4\">{getTranslation('contactForm.success.title')}</h3>\r\n                <p className=\"text-lg text-gray-600 mb-8\">\r\n                  {getTranslation('contactForm.success.message')}\r\n                </p>\r\n                <button\r\n                  onClick={() => setIsSubmitted(false)}\r\n                  className=\"bg-primary hover:bg-blue-600 text-white px-8 py-3 rounded-lg font-semibold transition-colors\"\r\n                >\r\n                  {getTranslation('contactForm.success.button')}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Office Locations */}\r\n          <div className=\"space-y-8\">\r\n            <div>\r\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-8 flex items-center gap-3\">\r\n                <Globe className=\"text-primary\" size={32} />\r\n                {getTranslation('globalOffices.title.mainHeading')}\r\n              </h2>\r\n              <p className=\"text-lg text-gray-600 mb-8\">\r\n                {getTranslation('globalOffices.subtitle.description')}\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"space-y-6\">\r\n              {offices.map((office, index) => (\r\n                <div key={index} className=\"bg-gray-50 rounded-2xl p-6 hover:shadow-lg transition-all duration-300\">\r\n                  <div className=\"flex items-start justify-between mb-4\">\r\n                    <div className=\"flex items-center gap-3\">\r\n                      <span className=\"text-2xl\">{office.flag}</span>\r\n                      <div>\r\n                        <h3 className=\"text-xl font-bold text-gray-900\">{office.city}</h3>\r\n                        <p className=\"text-gray-600\">{office.country}</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      <div className=\"text-sm text-gray-500\">{office.timezone}</div>\r\n                      <div className=\"text-sm font-semibold text-gray-700\">{office.hours}</div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"grid md:grid-cols-2 gap-4\">\r\n                    <div className=\"flex items-start gap-3\">\r\n                      <MapPin size={20} className=\"text-gray-400 mt-1 flex-shrink-0\" />\r\n                      <div className=\"text-gray-700 whitespace-pre-line\">{office.address}</div>\r\n                    </div>\r\n                    <div className=\"space-y-2\">\r\n                      <div className=\"flex items-center gap-3\">\r\n                        <Phone size={20} className=\"text-gray-400 flex-shrink-0\" />\r\n                        <a href={`tel:${office.phone}`} className=\"text-primary hover:underline\">\r\n                          {office.phone}\r\n                        </a>\r\n                      </div>\r\n                      <div className=\"flex items-center gap-3\">\r\n                        <Mail size={20} className=\"text-gray-400 flex-shrink-0\" />\r\n                        <a href={`mailto:${office.email}`} className=\"text-primary hover:underline\">\r\n                          {office.email}\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            {/* Social Media */}\r\n            <div className=\"bg-white rounded-2xl p-8 shadow-lg\">\r\n              <h3 className=\"text-xl font-bold text-gray-900 mb-6\">{getTranslation('socialMedia.title.mainHeading')}</h3>\r\n              <div className=\"flex items-center gap-4\">\r\n                <a\r\n                  href=\"#\"\r\n                  className=\"w-12 h-12 bg-gray-100 hover:bg-primary hover:text-white rounded-lg flex items-center justify-center transition-all duration-300 transform hover:scale-110\"\r\n                >\r\n                  <Linkedin size={24} />\r\n                </a>\r\n                <a\r\n                  href=\"#\"\r\n                  className=\"w-12 h-12 bg-gray-100 hover:bg-primary hover:text-white rounded-lg flex items-center justify-center transition-all duration-300 transform hover:scale-110\"\r\n                >\r\n                  <Twitter size={24} />\r\n                </a>\r\n                <a\r\n                  href=\"#\"\r\n                  className=\"w-12 h-12 bg-gray-100 hover:bg-primary hover:text-white rounded-lg flex items-center justify-center transition-all duration-300 transform hover:scale-110\"\r\n                >\r\n                  <Youtube size={24} />\r\n                </a>\r\n              </div>\r\n              <p className=\"text-gray-600 mt-4\">\r\n                {getTranslation('socialMedia.description.text')}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Emergency Support */}\r\n        <div className=\"mt-16 bg-gradient-to-r from-red-500 to-red-600 rounded-2xl p-8 text-white\">\r\n          <div className=\"text-center\">\r\n            <div className=\"inline-flex items-center justify-center w-16 h-16 bg-white bg-opacity-20 rounded-full mb-6\">\r\n              <Headphones size={32} />\r\n            </div>\r\n            <h3 className=\"text-2xl font-bold mb-4\">{getTranslation('emergencySupport.title.mainHeading')}</h3>\r\n            <p className=\"text-lg text-red-100 mb-8 max-w-3xl mx-auto\">\r\n              {getTranslation('emergencySupport.description.text')}\r\n            </p>\r\n            \r\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\r\n              <button className=\"bg-white text-red-600 hover:bg-gray-100 px-8 py-4 rounded-lg font-semibold text-lg transition-all duration-300 transform hover:scale-105 flex items-center justify-center gap-3\">\r\n                <Phone size={24} />\r\n                {getTranslation('emergencySupport.buttons.emergencyHotline')}\r\n              </button>\r\n              <button className=\"border-2 border-white text-white hover:bg-white hover:text-red-600 px-8 py-4 rounded-lg font-semibold text-lg transition-all duration-300 flex items-center justify-center gap-3\">\r\n                <MessageCircle size={24} />\r\n                {getTranslation('emergencySupport.buttons.priorityChat')}\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"grid md:grid-cols-3 gap-6 mt-8 pt-8 border-t border-white border-opacity-20\">\r\n              <div className=\"text-center\">\r\n                <div className=\"text-2xl font-bold mb-2\">{getTranslation('emergencySupport.stats.emergencySupportValue')}</div>\r\n                <div className=\"text-red-200 text-sm\">{getTranslation('emergencySupport.stats.emergencySupport')}</div>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <div className=\"text-2xl font-bold mb-2\">{getTranslation('emergencySupport.stats.responseTimeValue')}</div>\r\n                <div className=\"text-red-200 text-sm\">{getTranslation('emergencySupport.stats.responseTime')}</div>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <div className=\"text-2xl font-bold mb-2\">{getTranslation('emergencySupport.stats.languagesValue')}</div>\r\n                <div className=\"text-red-200 text-sm\">{getTranslation('emergencySupport.stats.languages')}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactPage;\r\n","usedDeprecatedRules":[]}]