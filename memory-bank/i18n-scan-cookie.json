[{"filePath":"C:\\Users\\Administrator\\Downloads\\optimo-workforce\\optimo-workforce\\src\\components\\CookiePolicyPage.tsx","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: The keyword 'import' is reserved","line":1,"column":1,"nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { \r\n  Settings, \r\n  Eye, \r\n  Shield, \r\n  Globe, \r\n  BarChart3, \r\n  Clock, \r\n  Download, \r\n  Mail, \r\n  CheckCircle, \r\n  Cookie, \r\n  Database, \r\n  Monitor, \r\n  Smartphone,\r\n  ChevronDown,\r\n  ChevronUp,\r\n  Target,\r\n  X,\r\n  RefreshCw\r\n} from 'lucide-react';\r\n\r\nconst CookiePolicyPage: React.FC = () => {\r\n  const { t } = useTranslation('components/cookie-policy');\r\n  const [expandedSection, setExpandedSection] = useState<string | null>('overview');\r\n  const [activeTab, setActiveTab] = useState('policy');\r\n  const [cookiePreferences, setCookiePreferences] = useState({\r\n    essential: true,\r\n    performance: true,\r\n    functional: true,\r\n    marketing: false\r\n  });\r\n\r\n  const lastUpdated = t('heroSection.meta.dateValue');\r\n  const effectiveDate = t('heroSection.meta.dateValue');\r\n\r\n  const tabs = [\r\n    { id: 'policy', name: t('navigation.tabs.policy'), icon: Cookie },\r\n    { id: 'preferences', name: t('navigation.tabs.preferences'), icon: Settings },\r\n    { id: 'types', name: t('navigation.tabs.types'), icon: Database },\r\n    { id: 'contact', name: t('navigation.tabs.contact'), icon: Mail }\r\n  ];\r\n\r\n  const cookieSections = [\r\n    {\r\n      id: 'overview',\r\n      title: t('sections.overview.title'),\r\n      icon: Cookie,\r\n      content: t('sections.overview.content')\r\n    },\r\n    {\r\n      id: 'types-we-use',\r\n      title: t('sections.types.title'),\r\n      icon: Database,\r\n      content: t('sections.types.content')\r\n    },\r\n    {\r\n      id: 'how-we-use',\r\n      title: t('sections.usage.title'),\r\n      icon: Target,\r\n      content: t('sections.usage.content')\r\n    },\r\n    {\r\n      id: 'third-party',\r\n      title: t('sections.thirdParty.title'),\r\n      icon: Globe,\r\n      content: t('sections.thirdParty.content')\r\n    },\r\n    {\r\n      id: 'cookie-duration',\r\n      title: t('sections.duration.title'),\r\n      icon: Clock,\r\n      content: t('sections.duration.content')\r\n    },\r\n    {\r\n      id: 'managing-cookies',\r\n      title: t('sections.managing.title'),\r\n      icon: Settings,\r\n      content: t('sections.managing.content')\r\n    },\r\n    {\r\n      id: 'legal-basis',\r\n      title: t('sections.legal.title'),\r\n      icon: Shield,\r\n      content: t('sections.legal.content')\r\n    },\r\n    {\r\n      id: 'updates-changes',\r\n      title: t('sections.updates.title'),\r\n      icon: RefreshCw,\r\n      content: t('sections.updates.content')\r\n    }\r\n  ];\r\n\r\n  const cookieTypes = [\r\n    {\r\n      category: t('cookieTypes.essential.title'),\r\n      description: t('cookieTypes.essential.description'),\r\n      examples: [\r\n        { name: 'session_id', purpose: t('cookieTypes.essential.examples.sessionId'), duration: t('cookieTypes.essential.examples.session'), canDisable: false },\r\n        { name: 'csrf_token', purpose: t('cookieTypes.essential.examples.csrfToken'), duration: t('cookieTypes.essential.examples.oneHour'), canDisable: false },\r\n        { name: 'auth_token', purpose: t('cookieTypes.essential.examples.authToken'), duration: t('cookieTypes.essential.examples.thirtyDays'), canDisable: false },\r\n        { name: 'load_balancer', purpose: t('cookieTypes.essential.examples.loadBalancer'), duration: t('cookieTypes.essential.examples.session'), canDisable: false }\r\n      ],\r\n      color: 'bg-red-500',\r\n      enabled: true,\r\n      required: true\r\n    },\r\n    {\r\n      category: t('cookieTypes.performance.title'),\r\n      description: t('cookieTypes.performance.description'),\r\n      examples: [\r\n        { name: '_ga', purpose: t('cookieTypes.performance.examples.ga'), duration: t('cookieTypes.performance.examples.twoYears'), canDisable: true },\r\n        { name: '_gid', purpose: t('cookieTypes.performance.examples.gid'), duration: t('cookieTypes.performance.examples.twentyFourHours'), canDisable: true },\r\n        { name: 'performance_metrics', purpose: t('cookieTypes.performance.examples.performanceMetrics'), duration: t('cookieTypes.performance.examples.oneYear'), canDisable: true },\r\n        { name: 'error_tracking', purpose: t('cookieTypes.performance.examples.errorTracking'), duration: t('cookieTypes.performance.examples.thirtyDays'), canDisable: true }\r\n      ],\r\n      color: 'bg-blue-500',\r\n      enabled: cookiePreferences.performance,\r\n      required: false\r\n    },\r\n    {\r\n      category: t('cookieTypes.functional.title'),\r\n      description: t('cookieTypes.functional.description'),\r\n      examples: [\r\n        { name: 'language_pref', purpose: t('cookieTypes.functional.examples.languagePref'), duration: t('cookieTypes.functional.examples.oneYear'), canDisable: true },\r\n        { name: 'theme_setting', purpose: t('cookieTypes.functional.examples.themeSetting'), duration: t('cookieTypes.functional.examples.oneYear'), canDisable: true },\r\n        { name: 'dashboard_layout', purpose: t('cookieTypes.functional.examples.dashboardLayout'), duration: t('cookieTypes.functional.examples.sixMonths'), canDisable: true },\r\n        { name: 'notification_prefs', purpose: t('cookieTypes.functional.examples.notificationPrefs'), duration: t('cookieTypes.functional.examples.oneYear'), canDisable: true }\r\n      ],\r\n      color: 'bg-green-500',\r\n      enabled: cookiePreferences.functional,\r\n      required: false\r\n    },\r\n    {\r\n      category: t('cookieTypes.marketing.title'),\r\n      description: t('cookieTypes.marketing.description'),\r\n      examples: [\r\n        { name: 'marketing_id', purpose: t('cookieTypes.marketing.examples.marketingId'), duration: t('cookieTypes.marketing.examples.oneYear'), canDisable: true },\r\n        { name: 'conversion_pixel', purpose: t('cookieTypes.marketing.examples.conversionPixel'), duration: t('cookieTypes.marketing.examples.ninetyDays'), canDisable: true },\r\n        { name: 'remarketing_tag', purpose: t('cookieTypes.marketing.examples.remarketingTag'), duration: t('cookieTypes.marketing.examples.oneHundredEightyDays'), canDisable: true },\r\n        { name: 'social_pixel', purpose: t('cookieTypes.marketing.examples.socialPixel'), duration: t('cookieTypes.marketing.examples.oneYear'), canDisable: true }\r\n      ],\r\n      color: 'bg-purple-500',\r\n      enabled: cookiePreferences.marketing,\r\n      required: false\r\n    }\r\n  ];\r\n\r\n  const contactInfo = [\r\n    {\r\n      title: t('contact.privacyTeam.title'),\r\n      email: 'privacy@optimoworkforce.com',\r\n      description: t('contact.privacyTeam.description'),\r\n      icon: Shield\r\n    },\r\n    {\r\n      title: t('contact.dpo.title'),\r\n      email: 'dpo@optimoworkforce.com',\r\n      description: t('contact.dpo.description'),\r\n      icon: Eye\r\n    },\r\n    {\r\n      title: t('contact.support.title'),\r\n      email: 'support@optimoworkforce.com',\r\n      description: t('contact.support.description'),\r\n      icon: Settings\r\n    }\r\n  ];\r\n\r\n  const toggleSection = (sectionId: string) => {\r\n    setExpandedSection(expandedSection === sectionId ? null : sectionId);\r\n  };\r\n\r\n  const handleCookiePreferenceChange = (category: string, enabled: boolean) => {\r\n    if (category === 'essential') return;\r\n    \r\n    setCookiePreferences(prev => ({\r\n      ...prev,\r\n      [category]: enabled\r\n    }));\r\n  };\r\n\r\n  const savePreferences = () => {\r\n    localStorage.setItem('cookiePreferences', JSON.stringify(cookiePreferences));\r\n    alert(t('preferences.saveSuccess'));\r\n  };\r\n\r\n  const resetPreferences = () => {\r\n    setCookiePreferences({\r\n      essential: true,\r\n      performance: true,\r\n      functional: true,\r\n      marketing: false\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-white\">\r\n      {/* Hero Section */}\r\n      <section className=\"relative bg-gradient-to-br from-primary to-blue-600 text-white overflow-hidden\">\r\n        <div className=\"absolute inset-0 bg-black opacity-10\"></div>\r\n        <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20 lg:py-32\">\r\n          <div className=\"text-center\">\r\n            <div className=\"inline-flex items-center justify-center w-24 h-24 bg-white bg-opacity-20 rounded-full mb-8 animate-pulse-slow\">\r\n              <Cookie size={48} className=\"text-white\" />\r\n            </div>\r\n            <h1 className=\"text-4xl lg:text-6xl font-ibm-plex-sans font-bold leading-tight mb-6\">\r\n              {t('heroSection.title')}\r\n            </h1>\r\n            <p className=\"text-xl lg:text-2xl mb-8 text-blue-100 max-w-4xl mx-auto\">\r\n              {t('heroSection.subtitle')}\r\n            </p>\r\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\r\n              <div className=\"bg-white bg-opacity-20 backdrop-blur-sm rounded-lg px-6 py-3\">\r\n                <div className=\"text-sm text-blue-200\">{t('heroSection.meta.lastUpdated')}</div>\r\n                <div className=\"text-lg font-semibold\">{lastUpdated}</div>\r\n              </div>\r\n              <div className=\"bg-white bg-opacity-20 backdrop-blur-sm rounded-lg px-6 py-3\">\r\n                <div className=\"text-sm text-blue-200\">{t('heroSection.meta.effectiveDate')}</div>\r\n                <div className=\"text-lg font-semibold\">{effectiveDate}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Quick Summary */}\r\n      <section className=\"py-20 bg-gray-50\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"text-center mb-16\">\r\n            <h2 className=\"text-4xl lg:text-5xl font-ibm-plex-sans font-bold text-gray-900 mb-4\">\r\n              {t('summary.title')}\r\n            </h2>\r\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\r\n              {t('summary.subtitle')}\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"grid lg:grid-cols-4 gap-8\">\r\n            <div className=\"bg-white rounded-2xl p-8 shadow-lg text-center\">\r\n              <div className=\"inline-flex items-center justify-center w-16 h-16 rounded-full bg-red-100 mb-6\">\r\n                <Shield size={32} className=\"text-red-600\" />\r\n              </div>\r\n              <h3 className=\"text-xl font-bold text-gray-900 mb-4\">{t('summary.essential.title')}</h3>\r\n              <p className=\"text-gray-600\">{t('summary.essential.description')}</p>\r\n            </div>\r\n\r\n            <div className=\"bg-white rounded-2xl p-8 shadow-lg text-center\">\r\n              <div className=\"inline-flex items-center justify-center w-16 h-16 rounded-full bg-blue-100 mb-6\">\r\n                <BarChart3 size={32} className=\"text-blue-600\" />\r\n              </div>\r\n              <h3 className=\"text-xl font-bold text-gray-900 mb-4\">{t('summary.performance.title')}</h3>\r\n              <p className=\"text-gray-600\">{t('summary.performance.description')}</p>\r\n            </div>\r\n\r\n            <div className=\"bg-white rounded-2xl p-8 shadow-lg text-center\">\r\n              <div className=\"inline-flex items-center justify-center w-16 h-16 rounded-full bg-green-100 mb-6\">\r\n                <Settings size={32} className=\"text-green-600\" />\r\n              </div>\r\n              <h3 className=\"text-xl font-bold text-gray-900 mb-4\">{t('summary.functional.title')}</h3>\r\n              <p className=\"text-gray-600\">{t('summary.functional.description')}</p>\r\n            </div>\r\n\r\n            <div className=\"bg-white rounded-2xl p-8 shadow-lg text-center\">\r\n              <div className=\"inline-flex items-center justify-center w-16 h-16 rounded-full bg-purple-100 mb-6\">\r\n                <Target size={32} className=\"text-purple-600\" />\r\n              </div>\r\n              <h3 className=\"text-xl font-bold text-gray-900 mb-4\">{t('summary.marketing.title')}</h3>\r\n              <p className=\"text-gray-600\">{t('summary.marketing.description')}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Main Content */}\r\n      <section className=\"py-20 bg-white\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          {/* Tab Navigation */}\r\n          <div className=\"flex flex-wrap justify-center gap-4 mb-12\">\r\n            {tabs.map((tab) => {\r\n              const Icon = tab.icon;\r\n              return (\r\n                <button\r\n                  key={tab.id}\r\n                  onClick={() => setActiveTab(tab.id)}\r\n                  className={`flex items-center gap-3 px-6 py-3 rounded-lg font-semibold text-lg transition-all duration-300 ${\r\n                    activeTab === tab.id\r\n                      ? 'bg-primary text-white shadow-lg transform scale-105'\r\n                      : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\r\n                  }`}\r\n                >\r\n                  <Icon size={20} />\r\n                  {tab.name}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          {/* Tab Content */}\r\n          <div className=\"animate-fade-in\">\r\n            {/* Cookie Policy Tab */}\r\n            {activeTab === 'policy' && (\r\n              <div className=\"max-w-4xl mx-auto\">\r\n                <div className=\"bg-blue-50 rounded-2xl p-8 mb-12\">\r\n                  <div className=\"flex items-start gap-4\">\r\n                    <Cookie size={24} className=\"text-blue-600 flex-shrink-0 mt-1\" />\r\n                    <div>\r\n                      <h3 className=\"text-xl font-bold text-blue-900 mb-2\">{t('policy.consent.title')}</h3>\r\n                      <p className=\"text-blue-800\">\r\n                        {t('policy.consent.description')}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"space-y-6\">\r\n                  {cookieSections.map((section) => {\r\n                    const Icon = section.icon;\r\n                    const isExpanded = expandedSection === section.id;\r\n                    \r\n                    return (\r\n                      <div key={section.id} className=\"bg-gray-50 rounded-2xl overflow-hidden\">\r\n                        <button\r\n                          onClick={() => toggleSection(section.id)}\r\n                          className=\"w-full flex items-center justify-between p-8 text-left hover:bg-gray-100 transition-colors\"\r\n                        >\r\n                          <div className=\"flex items-center gap-4\">\r\n                            <div className=\"w-12 h-12 bg-primary bg-opacity-10 rounded-lg flex items-center justify-center\">\r\n                              <Icon size={24} className=\"text-primary\" />\r\n                            </div>\r\n                            <h3 className=\"text-2xl font-bold text-gray-900\">{section.title}</h3>\r\n                          </div>\r\n                          {isExpanded ? (\r\n                            <ChevronUp size={24} className=\"text-gray-400\" />\r\n                          ) : (\r\n                            <ChevronDown size={24} className=\"text-gray-400\" />\r\n                          )}\r\n                        </button>\r\n                        \r\n                        {isExpanded && (\r\n                          <div className=\"px-8 pb-8\">\r\n                            <div className=\"bg-white rounded-lg p-6\">\r\n                              <div className=\"prose prose-lg max-w-none\">\r\n                                {section.content.split('\\n\\n').map((paragraph, index) => (\r\n                                  <div key={index} className=\"mb-4\">\r\n                                    {paragraph.startsWith('**') ? (\r\n                                      <div className=\"font-semibold text-gray-900 mb-2\">\r\n                                        {paragraph.replace(/\\*\\*/g, '')}\r\n                                      </div>\r\n                                    ) : paragraph.startsWith('•') ? (\r\n                                      <ul className=\"list-disc list-inside space-y-1 ml-4\">\r\n                                        {paragraph.split('\\n').map((item, itemIndex) => (\r\n                                          <li key={itemIndex} className=\"text-gray-700\">\r\n                                            {item.replace('• ', '')}\r\n                                          </li>\r\n                                        ))}\r\n                                      </ul>\r\n                                    ) : (\r\n                                      <p className=\"text-gray-700 leading-relaxed\">{paragraph}</p>\r\n                                    )}\r\n                                  </div>\r\n                                ))}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Cookie Preferences Tab */}\r\n            {activeTab === 'preferences' && (\r\n              <div className=\"max-w-6xl mx-auto\">\r\n                <div className=\"text-center mb-16\">\r\n                  <h2 className=\"text-4xl lg:text-5xl font-ibm-plex-sans font-bold text-gray-900 mb-4\">\r\n                    {t('preferences.title')}\r\n                  </h2>\r\n                  <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\r\n                    {t('preferences.subtitle')}\r\n                  </p>\r\n                </div>\r\n\r\n                <div className=\"space-y-8\">\r\n                  {cookieTypes.map((type, index) => (\r\n                    <div key={index} className=\"bg-gray-50 rounded-2xl p-8\">\r\n                      <div className=\"flex items-center justify-between mb-6\">\r\n                        <div className=\"flex items-center gap-4\">\r\n                          <div className={`w-4 h-4 rounded-full ${type.color}`}></div>\r\n                          <div>\r\n                            <h3 className=\"text-xl font-bold text-gray-900\">{type.category}</h3>\r\n                            <p className=\"text-gray-600\">{type.description}</p>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"flex items-center gap-4\">\r\n                          {type.required && (\r\n                            <span className=\"px-3 py-1 bg-red-100 text-red-700 rounded-full text-sm font-semibold\">\r\n                              {t('cookieTypes.required')}\r\n                            </span>\r\n                          )}\r\n                          <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              checked={type.enabled}\r\n                              onChange={(e) => handleCookiePreferenceChange(\r\n                                type.category.toLowerCase().split(' ')[0], \r\n                                e.target.checked\r\n                              )}\r\n                              disabled={type.required}\r\n                              className=\"sr-only peer\"\r\n                            />\r\n                            <div className={`relative w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all ${type.enabled ? 'peer-checked:bg-blue-600' : ''} ${type.required ? 'opacity-50 cursor-not-allowed' : ''}`}></div>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"grid lg:grid-cols-2 gap-6\">\r\n                        {type.examples.map((example, exampleIndex) => (\r\n                          <div key={exampleIndex} className=\"bg-white rounded-lg p-4\">\r\n                            <div className=\"flex items-center justify-between mb-2\">\r\n                              <h4 className=\"font-semibold text-gray-900\">{example.name}</h4>\r\n                              <span className=\"text-sm text-gray-500\">{example.duration}</span>\r\n                            </div>\r\n                            <p className=\"text-gray-600 text-sm\">{example.purpose}</p>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n                <div className=\"mt-12 bg-white rounded-2xl p-8 shadow-lg\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div>\r\n                      <h3 className=\"text-xl font-bold text-gray-900 mb-2\">{t('preferences.save.title')}</h3>\r\n                      <p className=\"text-gray-600\">{t('preferences.save.description')}</p>\r\n                    </div>\r\n                    <div className=\"flex gap-4\">\r\n                      <button\r\n                        onClick={resetPreferences}\r\n                        className=\"px-6 py-3 border border-gray-300 text-gray-700 hover:bg-gray-50 rounded-lg font-semibold transition-colors flex items-center gap-2\"\r\n                      >\r\n                        <RefreshCw size={16} />\r\n                        {t('preferences.reset')}\r\n                      </button>\r\n                      <button\r\n                        onClick={savePreferences}\r\n                        className=\"px-8 py-3 bg-primary hover:bg-blue-600 text-white rounded-lg font-semibold transition-colors flex items-center gap-2\"\r\n                      >\r\n                        <CheckCircle size={16} />\r\n                        {t('preferences.save.button')}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Cookie Types Tab */}\r\n            {activeTab === 'types' && (\r\n              <div className=\"max-w-6xl mx-auto\">\r\n                <div className=\"text-center mb-16\">\r\n                  <h2 className=\"text-4xl lg:text-5xl font-ibm-plex-sans font-bold text-gray-900 mb-4\">\r\n                    {t('types.title')}\r\n                  </h2>\r\n                  <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\r\n                    {t('types.subtitle')}\r\n                  </p>\r\n                </div>\r\n\r\n                <div className=\"space-y-12\">\r\n                  {cookieTypes.map((category, categoryIndex) => (\r\n                    <div key={categoryIndex}>\r\n                      <div className=\"flex items-center gap-4 mb-8\">\r\n                        <div className={`w-4 h-4 rounded-full ${category.color}`}></div>\r\n                        <h3 className=\"text-2xl font-bold text-gray-900\">{category.category}</h3>\r\n                        {category.required && (\r\n                          <span className=\"px-3 py-1 bg-red-100 text-red-700 rounded-full text-sm font-semibold\">\r\n                            {t('cookieTypes.alwaysActive')}\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n\r\n                      <div className=\"bg-gray-50 rounded-2xl p-8 mb-8\">\r\n                        <p className=\"text-lg text-gray-700 mb-6\">{category.description}</p>\r\n                        \r\n                        <div className=\"overflow-x-auto\">\r\n                          <table className=\"w-full bg-white rounded-lg overflow-hidden\">\r\n                            <thead className=\"bg-gray-100\">\r\n                              <tr>\r\n                                <th className=\"px-6 py-4 text-left text-sm font-semibold text-gray-900\">{t('types.table.cookieName')}</th>\r\n                                <th className=\"px-6 py-4 text-left text-sm font-semibold text-gray-900\">{t('types.table.purpose')}</th>\r\n                                <th className=\"px-6 py-4 text-left text-sm font-semibold text-gray-900\">{t('types.table.duration')}</th>\r\n                                <th className=\"px-6 py-4 text-left text-sm font-semibold text-gray-900\">{t('types.table.canDisable')}</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody className=\"divide-y divide-gray-200\">\r\n                              {category.examples.map((cookie, cookieIndex) => (\r\n                                <tr key={cookieIndex} className=\"hover:bg-gray-50\">\r\n                                  <td className=\"px-6 py-4 text-sm font-medium text-gray-900\">{cookie.name}</td>\r\n                                  <td className=\"px-6 py-4 text-sm text-gray-700\">{cookie.purpose}</td>\r\n                                  <td className=\"px-6 py-4 text-sm text-gray-700\">{cookie.duration}</td>\r\n                                  <td className=\"px-6 py-4 text-sm\">\r\n                                    {cookie.canDisable ? (\r\n                                      <CheckCircle size={16} className=\"text-green-500\" />\r\n                                    ) : (\r\n                                      <X size={16} className=\"text-red-500\" />\r\n                                    )}\r\n                                  </td>\r\n                                </tr>\r\n                              ))}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n                {/* Browser Instructions */}\r\n                <div className=\"mt-16 bg-gradient-to-r from-primary to-blue-600 rounded-2xl p-8 text-white\">\r\n                  <h3 className=\"text-2xl font-bold mb-6 text-center\">{t('types.browser.title')}</h3>\r\n                  <div className=\"grid md:grid-cols-3 gap-8\">\r\n                    <div className=\"text-center\">\r\n                      <div className=\"inline-flex items-center justify-center w-16 h-16 bg-white bg-opacity-20 rounded-full mb-4\">\r\n                        <Monitor size={32} />\r\n                      </div>\r\n                      <h4 className=\"text-lg font-bold mb-2\">{t('types.browser.desktop.title')}</h4>\r\n                      <p className=\"text-blue-100\">{t('types.browser.desktop.description')}</p>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <div className=\"inline-flex items-center justify-center w-16 h-16 bg-white bg-opacity-20 rounded-full mb-4\">\r\n                        <Smartphone size={32} />\r\n                      </div>\r\n                      <h4 className=\"text-lg font-bold mb-2\">{t('types.browser.mobile.title')}</h4>\r\n                      <p className=\"text-blue-100\">{t('types.browser.mobile.description')}</p>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <div className=\"inline-flex items-center justify-center w-16 h-16 bg-white bg-opacity-20 rounded-full mb-4\">\r\n                        <Settings size={32} />\r\n                      </div>\r\n                      <h4 className=\"text-lg font-bold mb-2\">{t('types.browser.tools.title')}</h4>\r\n                      <p className=\"text-blue-100\">{t('types.browser.tools.description')}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Contact Tab */}\r\n            {activeTab === 'contact' && (\r\n              <div className=\"max-w-6xl mx-auto\">\r\n                <div className=\"text-center mb-16\">\r\n                  <h2 className=\"text-4xl lg:text-5xl font-ibm-plex-sans font-bold text-gray-900 mb-4\">\r\n                    {t('contact.title')}\r\n                  </h2>\r\n                  <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\r\n                    {t('contact.subtitle')}\r\n                  </p>\r\n                </div>\r\n\r\n                <div className=\"grid lg:grid-cols-3 gap-8 mb-16\">\r\n                  {contactInfo.map((contact, index) => {\r\n                    const Icon = contact.icon;\r\n                    return (\r\n                      <div key={index} className=\"bg-white rounded-2xl p-8 shadow-lg text-center\">\r\n                        <div className=\"inline-flex items-center justify-center w-16 h-16 rounded-full bg-primary bg-opacity-10 mb-6\">\r\n                          <Icon size={32} className=\"text-primary\" />\r\n                        </div>\r\n                        <h3 className=\"text-xl font-bold text-gray-900 mb-4\">{contact.title}</h3>\r\n                        <p className=\"text-gray-600 mb-6\">{contact.description}</p>\r\n                        <a \r\n                          href={`mailto:${contact.email}`}\r\n                          className=\"bg-primary hover:bg-blue-600 text-white px-6 py-3 rounded-lg font-semibold transition-colors inline-flex items-center gap-2\"\r\n                        >\r\n                          <Mail size={16} />\r\n                          {contact.email}\r\n                        </a>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n\r\n                {/* FAQ Section */}\r\n                <div className=\"bg-gray-50 rounded-2xl p-8\">\r\n                  <h3 className=\"text-2xl font-bold text-gray-900 mb-8 text-center\">{t('faq.title')}</h3>\r\n                  <div className=\"grid md:grid-cols-2 gap-8\">\r\n                    <div>\r\n                      <h4 className=\"text-lg font-bold text-gray-900 mb-4\">{t('faq.withoutCookies.question')}</h4>\r\n                      <p className=\"text-gray-700 mb-6\">\r\n                        {t('faq.withoutCookies.answer')}\r\n                      </p>\r\n                      \r\n                      <h4 className=\"text-lg font-bold text-gray-900 mb-4\">{t('faq.updateFrequency.question')}</h4>\r\n                      <p className=\"text-gray-700\">\r\n                        {t('faq.updateFrequency.answer')}\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <h4 className=\"text-lg font-bold text-gray-900 mb-4\">{t('faq.dataSharing.question')}</h4>\r\n                      <p className=\"text-gray-700 mb-6\">\r\n                        {t('faq.dataSharing.answer')}\r\n                      </p>\r\n                      \r\n                      <h4 className=\"text-lg font-bold text-gray-900 mb-4\">{t('faq.deleteCookies.question')}</h4>\r\n                      <p className=\"text-gray-700\">\r\n                        {t('faq.deleteCookies.answer')}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Download Section */}\r\n      <section className=\"py-20 bg-gray-50\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"text-center\">\r\n            <h2 className=\"text-4xl lg:text-5xl font-ibm-plex-sans font-bold text-gray-900 mb-4\">\r\n              {t('download.title')}\r\n            </h2>\r\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto mb-12\">\r\n              {t('download.subtitle')}\r\n            </p>\r\n\r\n            <div className=\"grid lg:grid-cols-3 gap-8 max-w-4xl mx-auto\">\r\n              <div className=\"bg-white rounded-2xl p-8 shadow-lg\">\r\n                <div className=\"text-center\">\r\n                  <div className=\"inline-flex items-center justify-center w-16 h-16 rounded-full bg-primary bg-opacity-10 mb-6\">\r\n                    <Cookie size={32} className=\"text-primary\" />\r\n                  </div>\r\n                  <h3 className=\"text-xl font-bold text-gray-900 mb-4\">{t('download.policy.title')}</h3>\r\n                  <p className=\"text-gray-600 mb-6\">{t('download.policy.description')}</p>\r\n                  <button className=\"bg-primary hover:bg-blue-600 text-white px-6 py-3 rounded-lg font-semibold transition-colors flex items-center justify-center gap-2 w-full\">\r\n                    <Download size={16} />\r\n                    {t('download.policy.button')}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"bg-white rounded-2xl p-8 shadow-lg\">\r\n                <div className=\"text-center\">\r\n                  <div className=\"inline-flex items-center justify-center w-16 h-16 rounded-full bg-secondary bg-opacity-10 mb-6\">\r\n                    <Database size={32} className=\"text-secondary\" />\r\n                  </div>\r\n                  <h3 className=\"text-xl font-bold text-gray-900 mb-4\">{t('download.inventory.title')}</h3>\r\n                  <p className=\"text-gray-600 mb-6\">{t('download.inventory.description')}</p>\r\n                  <button className=\"bg-secondary hover:bg-green-600 text-white px-6 py-3 rounded-lg font-semibold transition-colors flex items-center justify-center gap-2 w-full\">\r\n                    <Download size={16} />\r\n                    {t('download.inventory.button')}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"bg-white rounded-2xl p-8 shadow-lg\">\r\n                <div className=\"text-center\">\r\n                  <div className=\"inline-flex items-center justify-center w-16 h-16 rounded-full bg-accent-latam bg-opacity-10 mb-6\">\r\n                    <Settings size={32} className=\"text-accent-latam\" />\r\n                  </div>\r\n                  <h3 className=\"text-xl font-bold text-gray-900 mb-4\">{t('download.guide.title')}</h3>\r\n                  <p className=\"text-gray-600 mb-6\">{t('download.guide.description')}</p>\r\n                  <button className=\"bg-accent-latam hover:opacity-90 text-white px-6 py-3 rounded-lg font-semibold transition-colors flex items-center justify-center gap-2 w-full\">\r\n                    <Download size={16} />\r\n                    {t('download.guide.button')}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CookiePolicyPage;\r\n","usedDeprecatedRules":[]}]